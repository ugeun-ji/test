// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_USLOGIN_PACKET_LOGIN_H_
#define FLATBUFFERS_GENERATED_USLOGIN_PACKET_LOGIN_H_

#include "flatbuffers/flatbuffers.h"

namespace Packet {
namespace Login {

struct USLogin;

struct USLogin FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_USERID = 4,
    VT_PWD = 6
  };
  const flatbuffers::String *userid() const {
    return GetPointer<const flatbuffers::String *>(VT_USERID);
  }
  const flatbuffers::String *pwd() const {
    return GetPointer<const flatbuffers::String *>(VT_PWD);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_USERID) &&
           verifier.VerifyString(userid()) &&
           VerifyOffset(verifier, VT_PWD) &&
           verifier.VerifyString(pwd()) &&
           verifier.EndTable();
  }
};

struct USLoginBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_userid(flatbuffers::Offset<flatbuffers::String> userid) {
    fbb_.AddOffset(USLogin::VT_USERID, userid);
  }
  void add_pwd(flatbuffers::Offset<flatbuffers::String> pwd) {
    fbb_.AddOffset(USLogin::VT_PWD, pwd);
  }
  explicit USLoginBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  USLoginBuilder &operator=(const USLoginBuilder &);
  flatbuffers::Offset<USLogin> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<USLogin>(end);
    return o;
  }
};

inline flatbuffers::Offset<USLogin> CreateUSLogin(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> userid = 0,
    flatbuffers::Offset<flatbuffers::String> pwd = 0) {
  USLoginBuilder builder_(_fbb);
  builder_.add_pwd(pwd);
  builder_.add_userid(userid);
  return builder_.Finish();
}

inline flatbuffers::Offset<USLogin> CreateUSLoginDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *userid = nullptr,
    const char *pwd = nullptr) {
  return Packet::Login::CreateUSLogin(
      _fbb,
      userid ? _fbb.CreateString(userid) : 0,
      pwd ? _fbb.CreateString(pwd) : 0);
}

inline const Packet::Login::USLogin *GetUSLogin(const void *buf) {
  return flatbuffers::GetRoot<Packet::Login::USLogin>(buf);
}

inline const Packet::Login::USLogin *GetSizePrefixedUSLogin(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<Packet::Login::USLogin>(buf);
}

inline bool VerifyUSLoginBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<Packet::Login::USLogin>(nullptr);
}

inline bool VerifySizePrefixedUSLoginBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<Packet::Login::USLogin>(nullptr);
}

inline void FinishUSLoginBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<Packet::Login::USLogin> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedUSLoginBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<Packet::Login::USLogin> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace Login
}  // namespace Packet

#endif  // FLATBUFFERS_GENERATED_USLOGIN_PACKET_LOGIN_H_
