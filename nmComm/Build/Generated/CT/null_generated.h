// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_NULL_CLIENT_INTERNAL_H_
#define FLATBUFFERS_GENERATED_NULL_CLIENT_INTERNAL_H_

#include "flatbuffers/flatbuffers.h"

namespace Client {
namespace Internal {

struct Null;

struct Null FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           verifier.EndTable();
  }
};

struct NullBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  explicit NullBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  NullBuilder &operator=(const NullBuilder &);
  flatbuffers::Offset<Null> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<Null>(end);
    return o;
  }
};

inline flatbuffers::Offset<Null> CreateNull(
    flatbuffers::FlatBufferBuilder &_fbb) {
  NullBuilder builder_(_fbb);
  return builder_.Finish();
}

inline const Client::Internal::Null *GetNull(const void *buf) {
  return flatbuffers::GetRoot<Client::Internal::Null>(buf);
}

inline const Client::Internal::Null *GetSizePrefixedNull(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<Client::Internal::Null>(buf);
}

inline bool VerifyNullBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<Client::Internal::Null>(nullptr);
}

inline bool VerifySizePrefixedNullBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<Client::Internal::Null>(nullptr);
}

inline void FinishNullBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<Client::Internal::Null> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedNullBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<Client::Internal::Null> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace Internal
}  // namespace Client

#endif  // FLATBUFFERS_GENERATED_NULL_CLIENT_INTERNAL_H_
